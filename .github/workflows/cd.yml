name: Mod CD

on:
  push:
    tags:
      - v*

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup keystore
        env:
          RELEASE_KEYSTORE: ${{ secrets.RELEASE_KEYSTORE }}
          RELEASE_KEYSTORE_PASSPHRASE: ${{ secrets.RELEASE_KEYSTORE_PASSPHRASE }}
        run: ./.github/prepare_keystore.sh
      - name: Set up JDK 1.11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Build with Gradle
        env:
          ORG_GRADLE_PROJECT_keyStore: ./release.keystore
          ORG_GRADLE_PROJECT_keyStoreAlias: ${{ secrets.KEYSTORE_ALIAS }}
          ORG_GRADLE_PROJECT_keyStorePass: ${{ secrets.KEYSTORE_PASS }}
        run: ./gradlew build
      - uses: actions/upload-artifact@v2
        with:
          name: artifacts
          path: build/libs
  release:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/download-artifact@v2
        with:
          name: artifacts
          path: ./libs
      - name: generate-changelog-action
        uses: ScottBrenner/generate-changelog-action@1.0.2
        id: changelog
        env:
          REPO: ${{ github.repository }}
        with:
          package-dir: '.github/package.json'
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            ${{ steps.changelog.outputs.changelog }}
          draft: false
          prerelease: false
      - name: Upload Release Assets
        id: upload-release-assets
        uses: alexellis/upload-assets@0.2.3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          asset_paths: '["./libs/*"]'
          asset_content_type: application/zip